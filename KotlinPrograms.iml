import androidx.compose.foundation.layout.*
import androidx.compose.material3.*
import androidx.compose.runtime.*
import androidx.compose.ui.Modifier
import androidx.compose.ui.text.input.PasswordVisualTransformation
import androidx.compose.ui.unit.dp
import androidx.compose.ui.tooling.preview.Preview
import androidx.compose.ui.Alignment
import androidx.compose.ui.text.input.VisualTransformation
import androidx.compose.ui.text.input.KeyboardType
import androidx.compose.foundation.text.KeyboardOptions

@OptIn(ExperimentalMaterial3Api::class)
@Composable
fun PasswordValidator() {
    var password by remember { mutableStateOf("") }

    // Check states for each password condition
    val isMinLength by remember(password) { derivedStateOf { password.length >= 8 } }
    val hasUppercase by remember(password) { derivedStateOf { password.any { it.isUpperCase() } } }
    val hasDigit by remember(password) { derivedStateOf { password.any { it.isDigit() } } }
    val hasSpecialChar by remember(password) { derivedStateOf { password.any { "!@#$%^&*()_+".contains(it) } } }

    // All conditions must be true to enable submission
    val isAllValid = isMinLength && hasUppercase && hasDigit && hasSpecialChar

    Column(
        modifier = Modifier
            .fillMaxSize()
            .padding(16.dp),
        verticalArrangement = Arrangement.Center,
        horizontalAlignment = Alignment.CenterHorizontally
    ) {
        OutlinedTextField(
            value = password,
            onValueChange = { password = it },
            label = { Text("Enter Password") },
            visualTransformation = PasswordVisualTransformation(),
            keyboardOptions = KeyboardOptions(keyboardType = KeyboardType.Password),
            modifier = Modifier.fillMaxWidth()
        )

        Spacer(modifier = Modifier.height(16.dp))

        // Dynamic checkbox list for password validation
        PasswordCheckBox(label = "Minimum 8 characters", checked = isMinLength)
        PasswordCheckBox(label = "At least 1 uppercase letter", checked = hasUppercase)
        PasswordCheckBox(label = "At least 1 digit", checked = hasDigit)
        PasswordCheckBox(label = "At least 1 special character (!@#$...)", checked = hasSpecialChar)

        Spacer(modifier = Modifier.height(32.dp))

        Button(
            onClick = { /* Submit logic */ },
            enabled = isAllValid
        ) {
            Text("Submit")
        }
    }
}

@Composable
fun PasswordCheckBox(label: String, checked: Boolean) {
    Row(
        verticalAlignment = Alignment.CenterVertically,
        modifier = Modifier.padding(vertical = 4.dp)
    ) {
        Checkbox(checked = checked, onCheckedChange = null)
        Text(label, modifier = Modifier.padding(start = 8.dp))
    }
}

@Preview(showBackground = true)
@Composable
fun PreviewPasswordValidator() {
    PasswordValidator()
}